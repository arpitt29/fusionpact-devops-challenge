name: Fusionpact DevOps CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fusionpact-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fusionpact-frontend:latest

  deploy:
    needs: build-and-push # Ensures this job runs after images are built
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Deploy only on pushes to main

    steps:
      - name: Deploy to Production Server
        # Using a more recent version of the action
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          script: |
            # Navigate to your project directory
            cd /home/${{ secrets.DEPLOY_USER }}/fusionpact-devops-challenge

            # Pull the latest changes from your repo (specifically the docker-compose.yml)
            git pull origin main

            # Pull the new images that were just built by the CI job
            docker-compose pull

            # Restart the services with the new images.
            # The -d flag runs them in the background.
            # --remove-orphans cleans up old containers.
            docker-compose up -d --remove-orphans

            # (Optional but recommended) Clean up old, unused Docker images
            docker image prune -f